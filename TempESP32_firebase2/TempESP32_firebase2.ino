//esp32를 사용하여 온도와 습도 값을 알아내어 어플 및 디스플레이에 출력

#include <OneWire.h>  //DHT11센서를 사용하기 위한..
#include <DHT.h>  //DHT11센서를 사용하기 위해 설치
#include <Wire.h> //Sh1106 1.3인치 OLED를 사용하기 위한..
#include <SPI.h>  //Sh1106 1.3인치 OLED를 사용하기 위한..
#include <Adafruit_GFX.h> //Sh1106 1.3인치 OLED를 사용하기 위해 설치
#include <Adafruit_SH110X.h>  //Sh1106 1.3인치 OLED를 사용하기 위해 설치
#include <WiFi.h> //firebase를 위해
#include <IOXhop_FirebaseESP32.h> //firebase를 위해

#define FIREBASE_HOST "https://tempesp32firebase-default-rtdb.firebaseio.com/"
#define FIREBASE_AUTH "AIzaSyC9cubNmCRgAQhmMNd9upMcHBWuXDzsMbc"
#define WIFI_SSID "U+Net88D1"
#define WIFI_PASSWORD "17#7MWD172"

#define DHTPIN 12 //온습도 센서를 연결한 포트

#define DHTTYPE DHT11   //DHT11, DHT21, DHT22 중에 선택

DHT dht(DHTPIN, DHTTYPE);

#define i2c_Address 0x3c //initialize with the I2C addr 0x3C Typically eBay OLED's
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define OLED_RESET -1   //   QT-PY / XIAO
Adafruit_SH1106G display = Adafruit_SH1106G(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET); //SH1106 I2C OLED 디스플레이 생성

float h = 0.0;
float t = 0.0;
float f = 0.0;
float hic = 0.0;
float hif = 0.0;

//===================================================================================================================================
//==============================================로고 이미지============================================================================
//===================================================================================================================================

const unsigned char SMARTAPPTEXT [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
0x00, 0x20, 0x3F, 0x20, 0xFE, 0x00, 0xC9, 0x01, 0xFF, 0x0F, 0xE1, 0xFC, 0x1E, 0x91, 0xF2, 0x00,
0x00, 0x20, 0x21, 0x20, 0x80, 0x01, 0x29, 0x00, 0x44, 0x00, 0x20, 0x04, 0x02, 0x91, 0x12, 0x00,
0x00, 0x70, 0x21, 0x20, 0x80, 0x02, 0x29, 0x00, 0x44, 0x00, 0x20, 0x04, 0x02, 0x91, 0x12, 0x00,
0x00, 0xD8, 0x21, 0x20, 0xFE, 0x02, 0x2F, 0x00, 0x44, 0x0F, 0xE0, 0x04, 0x06, 0x91, 0x12, 0x00,
0x01, 0x8E, 0x21, 0x38, 0x80, 0x02, 0x29, 0x00, 0x44, 0x08, 0x00, 0x04, 0x1C, 0x91, 0xF2, 0x00,
0x03, 0x03, 0x21, 0x20, 0xFE, 0x01, 0xC9, 0x01, 0xFF, 0x0F, 0xE0, 0x04, 0x10, 0xF0, 0x02, 0x00,
0x00, 0x00, 0x3F, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x10, 0x90, 0x02, 0x00,
0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x42, 0x00, 0x00, 0x01, 0x00, 0x04, 0x1E, 0x90, 0x7E, 0x00,
0x07, 0xFF, 0x00, 0x23, 0xFF, 0x80, 0x7E, 0x03, 0xFF, 0xBF, 0xF3, 0xFF, 0x00, 0x90, 0x81, 0x00,
0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x81, 0x00,
0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x7E, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char SENSORLOGO [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0x62, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0xF2, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0xF2, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0xF2, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0xF2, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x08, 0xF2, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x30, 0xF1, 0x80, 0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x40, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x80, 0xF0, 0x20, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x81, 0xF8, 0x20, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0x03, 0xFC, 0x10, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0x07, 0xFE, 0x10, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x02, 0x0F, 0xFE, 0x08, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x02, 0x0F, 0xFF, 0x08, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x02, 0x0F, 0xFF, 0x08, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x02, 0x0F, 0xFF, 0x08, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x02, 0x0F, 0xFE, 0x08, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0x07, 0xFE, 0x10, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0x03, 0xFC, 0x10, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x80, 0xF0, 0x20, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x20, 0x00, 0x00, 0x0F, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x40, 0x00, 0x00, 0x0F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x10, 0x01, 0x80, 0x00, 0x00, 0x07, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0C, 0x06, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x08, 0x01, 0x02, 0x00, 0x08, 0x00, 0x00,
0x00, 0x00, 0x02, 0x14, 0x00, 0x10, 0x00, 0x04, 0x00, 0x08, 0x01, 0x02, 0x00, 0x08, 0x00, 0x00,
0x00, 0x00, 0x02, 0x14, 0x04, 0x10, 0x0F, 0xC4, 0x3F, 0xC8, 0x01, 0xFE, 0x1F, 0x88, 0x00, 0x00,
0x00, 0x00, 0x02, 0x14, 0x04, 0x10, 0x00, 0x44, 0x06, 0x08, 0x01, 0x02, 0x00, 0x88, 0x00, 0x00,
0x00, 0x00, 0x02, 0x74, 0x04, 0x10, 0x00, 0x47, 0x86, 0x08, 0x01, 0xFE, 0x00, 0x88, 0x00, 0x00,
0x00, 0x00, 0x02, 0x14, 0x0C, 0xF0, 0x01, 0x84, 0x06, 0x08, 0x00, 0x00, 0x01, 0x88, 0x00, 0x00,
0x00, 0x00, 0x07, 0x14, 0x0C, 0x10, 0x03, 0x04, 0x06, 0x08, 0x0F, 0xFF, 0x83, 0x0F, 0x80, 0x00,
0x00, 0x00, 0x0C, 0x94, 0x1E, 0x10, 0x0C, 0x04, 0x0F, 0x08, 0x00, 0x20, 0x06, 0x08, 0x00, 0x00,
0x00, 0x00, 0x18, 0x94, 0x33, 0x10, 0x00, 0x00, 0x18, 0x88, 0x00, 0x20, 0x0C, 0x08, 0x00, 0x00,
0x00, 0x00, 0x02, 0x14, 0x61, 0x90, 0x01, 0xFC, 0x30, 0x48, 0x01, 0xFE, 0x18, 0x08, 0x00, 0x00,
0x00, 0x00, 0x02, 0x00, 0x40, 0x10, 0x01, 0x04, 0x60, 0x48, 0x00, 0x02, 0x00, 0x08, 0x00, 0x00,
0x00, 0x00, 0x02, 0x00, 0x00, 0x10, 0x01, 0x04, 0x00, 0x08, 0x01, 0xFE, 0x00, 0x08, 0x00, 0x00,
0x00, 0x00, 0x02, 0x00, 0x00, 0x10, 0x01, 0x04, 0x00, 0x08, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00,
0x00, 0x00, 0x03, 0xFE, 0x00, 0x10, 0x01, 0xFC, 0x00, 0x08, 0x01, 0xFE, 0x00, 0x08, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//===================================================================================================================================
//===================================================================================================================================
//===================================================================================================================================

void setup()
{
  Serial.begin(115200);
  Serial.println(F("센서 동작!"));

  // 와이파이 설정
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.println(F("와이파이 연결.."));
    delay(500);
  }
  Serial.println();
  Serial.print(F("연결: "));
  Serial.println(WiFi.localIP());
  
  dht.begin();  //DHT 센서 초기화
  
  // OLED 디스플레이 초기화
  delay(250); // wait for the OLED to power up
  display.begin(i2c_Address, true); // Address 0x3C default
 //display.setContrast (0); // dim display
 
  display.display();
  delay(2000);

  // Clear the buffer.
  display.clearDisplay();

  // 스마트앱 텍스트이미지 출력
  display.drawBitmap(0, 0, SMARTAPPTEXT, 128, 64, 1);
  display.display();

  delay(2000);  // 이미지를 2초 동안 표시
  display.clearDisplay();

  Firebase.begin(FIREBASE_HOST);//위에서 수정

  h = dht.readHumidity();
  t = dht.readTemperature();
  f = dht.readTemperature(true);
  delay(2000);
  Serial.println(F("시작"));
}

void loop()
{
//  delay(2000);  //DHT류 센서는 2초내에 센서를 업데이트하면 오류가 난다 따라서 2초의 지연을 주는 것을 기본으로 한다.
  
  h = dht.readHumidity();
  t = dht.readTemperature();
  f = dht.readTemperature(true);

  // 화씨단위로 열 지수 계산
  hif = dht.computeHeatIndex(f, h); //화씨 & 습도 사용
  // 섭씨 단위로 열 지수 계산 (isFahreheit = false)
  hic = dht.computeHeatIndex(t, h, false); //섭씨 & 습도 사용

  datasendFB(h, t, f, hic, hif);

  Serial.print(F("습도: "));
  Serial.print(h);      //DHT11 습도
  Serial.print(F("%  온도: "));
  Serial.print(t);  //섭씨 온도
  Serial.print(F("°C "));
  Serial.print(f);  //화씨 온도
  Serial.print(F("°F  열 지수: "));
  Serial.print(hic);
  Serial.print(F("°C "));
  Serial.print(hif);
  Serial.println(F("°F"));

  datadisplay();

  //센서 오류 발생시 출력
  if (isnan(h) || isnan(t) || isnan(f))
  {
    sensor_logo();
//    datasendFB(0, 0, 0, 0, 0);
    Serial.println(F("센서를 감지하지 못함!!"));
    return;
  }
}

//° 도 기호를 그리는 함수
void drawDegreeSymbol(int x, int y)
{
  display.drawCircle(x+3, y - 2, 1, SH110X_WHITE);
}

void sensor_logo()
{  // 센서 감지 불가 이미지 출력
  display.clearDisplay();
  display.drawBitmap(0, 0, SENSORLOGO, 128, 64, 1);
  display.display();
}

void datadisplay()
{
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SH110X_WHITE);
  display.setCursor(0, 10);
  display.println("Humidity: " + String(h) + "%");
  display.setCursor(0, 30);
  display.print("Temp(C): " + String(t));
  drawDegreeSymbol(display.getCursorX(), display.getCursorY());
  display.println(" C");
  display.setCursor(0, 50);
  display.print("Heat Index: " + String(hic));
  drawDegreeSymbol(display.getCursorX(), display.getCursorY());
  display.println(" C");
  display.display();
}

void datasendFB(float a, float b, float c, float d, float e)
{
    //firebase 데이터베이스
  Firebase.setFloat("/Hum/Humidity", a);  //습도
  errorFB();
  Firebase.setFloat("/TempC/Temp(C)", b); //섭씨
  errorFB();
  Firebase.setFloat("/TempF/Temp(F)", c); //화씨
  errorFB();
  Firebase.setFloat("/HIC/HIc(C)", d); //열지수 섭씨
  errorFB();
  Firebase.setFloat("/HIF/HIf(F)", e); //열지수 화씨
  errorFB();
}

void errorFB()
{
  // handle error
  if (Firebase.failed())
  {
    display.clearDisplay();
    display.setTextSize(2);
    display.setTextColor(SH110X_WHITE);
    display.setCursor(0, 20);
    display.println("WAIT..");
    display.display();
    Serial.print("setting /number failed:");
    Serial.println(Firebase.error());  
    return;
  }
  delay(500);
}
